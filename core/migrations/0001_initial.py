# Generated by Django 4.1.3 on 2022-11-03 15:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_api_football", models.CharField(max_length=200, unique=True)),
                (
                    "name",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="Country name"
                    ),
                ),
                ("logo", models.CharField(max_length=200, verbose_name="Country flag")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_api_football", models.CharField(max_length=200, unique=True)),
                ("name", models.CharField(max_length=200, verbose_name="Team name")),
                ("logo", models.CharField(max_length=200, verbose_name="Team logo")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_api_football", models.CharField(max_length=200, unique=True)),
                (
                    "nbr_of_penalty_committed",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of penalty committed"
                    ),
                ),
                (
                    "nbr_of_penalty_won",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of penalty won"
                    ),
                ),
                (
                    "nbr_of_penalty_scored",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of penalty scored"
                    ),
                ),
                (
                    "nbr_of_penalty_missed",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of penalty missed"
                    ),
                ),
                (
                    "nbr_of_dribble_attempts",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of dribble attempts"
                    ),
                ),
                (
                    "nbr_of_dribble_success",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of dribble success"
                    ),
                ),
                (
                    "nbr_of_tackles",
                    models.PositiveSmallIntegerField(verbose_name="Number of tackles"),
                ),
                (
                    "nbr_of_blocks",
                    models.PositiveSmallIntegerField(verbose_name="Number of blocks"),
                ),
                (
                    "nbr_of_interception",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of interception"
                    ),
                ),
                (
                    "nbr_of_clearances",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of clearances"
                    ),
                ),
                (
                    "nbr_of_dispossessed",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of dispossessed"
                    ),
                ),
                (
                    "nbr_of_saves",
                    models.PositiveSmallIntegerField(verbose_name="Number of saves"),
                ),
                (
                    "nbr_of_inside_box_saves",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of inside box saves"
                    ),
                ),
                (
                    "nbr_of_duels",
                    models.PositiveSmallIntegerField(verbose_name="Number of duels"),
                ),
                (
                    "nbr_of_duels_won",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of duels won"
                    ),
                ),
                (
                    "nbr_of_crosses",
                    models.PositiveSmallIntegerField(verbose_name="Number of crosses"),
                ),
                (
                    "nbr_of_passes",
                    models.PositiveSmallIntegerField(verbose_name="Number of passes"),
                ),
                ("passes_accuracy", models.FloatField(verbose_name="Passes accuracy")),
                (
                    "nbr_of_key_passes",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of key passes"
                    ),
                ),
                (
                    "nbr_of_goals",
                    models.PositiveSmallIntegerField(verbose_name="Number of goals"),
                ),
                (
                    "nbr_of_assists",
                    models.PositiveSmallIntegerField(verbose_name="Number of assists"),
                ),
                (
                    "nbr_of_shots",
                    models.PositiveSmallIntegerField(verbose_name="Number of shots"),
                ),
                (
                    "nbr_of_woodwork",
                    models.PositiveSmallIntegerField(verbose_name="Number of woodwork"),
                ),
                (
                    "nbr_of_match_played",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of match played"
                    ),
                ),
                (
                    "nbr_of_yellow_cards",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of yellow card"
                    ),
                ),
                (
                    "nbr_of_red_cards",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of red cards"
                    ),
                ),
                (
                    "nbr_of_minutes_played",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of minutes played"
                    ),
                ),
                (
                    "is_injured",
                    models.BooleanField(default=False, verbose_name="Is injured"),
                ),
                (
                    "nbr_of_substitute_out",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of substitute out"
                    ),
                ),
                (
                    "nbr_of_substitute_on_bench",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of substitute on bench"
                    ),
                ),
                (
                    "is_captain",
                    models.BooleanField(default=False, verbose_name="Is captain"),
                ),
                (
                    "nbr_of_goals_conceded",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of goals conceded"
                    ),
                ),
                (
                    "nbr_of_fouls_committed",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of fouls committed"
                    ),
                ),
                ("rating", models.FloatField(verbose_name="Rating")),
                ("name", models.CharField(max_length=200, verbose_name="Player name")),
                ("logo", models.CharField(max_length=200, verbose_name="Player image")),
                (
                    "number",
                    models.PositiveSmallIntegerField(verbose_name="Player number"),
                ),
                ("type", models.CharField(max_length=50, verbose_name="Player type")),
                ("age", models.PositiveSmallIntegerField(verbose_name="Player age")),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.country",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.team",
                        verbose_name="Team",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="League",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_api_football", models.CharField(max_length=200, unique=True)),
                ("name", models.CharField(max_length=200, verbose_name="League name")),
                ("logo", models.CharField(max_length=200, verbose_name="League logo")),
                (
                    "season",
                    models.CharField(max_length=200, verbose_name="League season"),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.country"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Coach",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Coach name")),
                ("age", models.PositiveSmallIntegerField(verbose_name="Coach age")),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.country"
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.team",
                        verbose_name="Team",
                    ),
                ),
            ],
        ),
    ]
